from flask import request, session
import json
import decimal
from __main__ import app
import controlador_exploits

class Encoder(json.JSONEncoder):
    def default(self, obj):
        if isinstance(obj, decimal.Decimal): return float(obj)

@app.route("/exploits",methods=["GET"])
def exploits():
    #if 'perfil' in session: 
    #    exploits,code= controlador_exploits.obtener_exploits()
    #    return json.dumps(exploits, cls = Encoder),code
    #else:
    #    return json.dumps('{"status":"usuario no logeado"}'),403
    exploits,code= controlador_exploits.obtener_exploits()
    return json.dumps(exploits, cls = Encoder),code

@app.route("/exploit/<cve>",methods=["GET"])
def exploit_por_id(cve):
    #if 'perfil' in session: 
    #    exploit,code = controlador_exploits.obtener_exploit_por_id(id)
    #    return json.dumps(exploit, cls = Encoder),code
    #else:
    #    return json.dumps('{"status":"usuario no logeado"}'),403
    exploit,code = controlador_exploits.obtener_exploit_por_id(cve)
    return json.dumps(exploit, cls = Encoder),code

@app.route("/exploits",methods=["POST"])
def guardar_exploit():
    content_type = request.headers.get('Content-Type')
    if (content_type == 'application/json'):
        exploit_json = request.json
        ret,code=controlador_exploits.insertar_exploit(exploit_json["cve"], exploit_json["name"], exploit_json["description"],session['user'])
    else:
        ret={"status":"Bad request"}
        code=401
    return json.dumps(ret), code

@app.route("/exploits/<cve>-<user>", methods=["DELETE"])
def eliminar_exploit(cve,user):
    if session["user"] == user or session["user"] == "root" :
        ret,code=controlador_exploits.eliminar_exploit(cve)
    else:
        ret={"status":"Forbidden"}
        code=403
    return json.dumps(ret), code

@app.route("/exploits", methods=["PUT"])
def actualizar_exploit():
    content_type = request.headers.get('Content-Type')
    if (content_type == 'application/json'):
        exploit_json = request.json
        ret,code=controlador_exploits.actualizar_exploit(exploit_json["cve"],exploit_json["name"], exploit_json["description"])
    else:
        ret={"status":"Bad request"}
        code=401
    return json.dumps(ret), code